name: Build debug APK

on:
  pull_request:
    branches: [dev]

jobs:
##  KtLint Check
#  ktlint_check:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Run ktlint check
#        run: ./gradlew ktlintDebugCheck --continue
##  Lint Check
#  lint_check:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Run lint check
#        run: ./gradlew lintDebug
##  Detekt Check
#  detekt_check:
#    runs-on: ubuntu-20.04
#    continue-on-error: true
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Run detekt check
#        run: ./gradlew detektDebug
##  Unit Test Check
#  test:
#    needs: [lint_check, ktlint_check, detekt_check]
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Run test
#        run: ./gradlew testDebugUnitTest
#  Instrumentation Test Check
  android_test:
#    needs: [lint_check, ktlint_check, detekt_check, test]
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck
##  Build artifact
#  build:
#    needs:
#      - lint_check
#      - ktlint_check
#      - detekt_check
#      - android_test
#      - test
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Restore Cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Assemble debug apk
#        run: ./gradlew assembleDebug
#      - name: Upload APK
#        uses: actions/upload-artifact@v2
#        with:
#          name: apk
#          path: app/build/outputs/apk/debug/**.apk